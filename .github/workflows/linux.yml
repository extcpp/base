name: Linux

on:
  push:
    branches: [ master, github ]
    paths-ignore:
      - 'README.rst'
      - 'doc/**'
  pull_request:
    branches: [ master, github ]
    paths-ignore:
      - 'README.rst'
      - 'doc/**'

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - g++-12
          - clang++-15
        build_type: [ Debug, Release ]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      CXX: ${{ matrix.compiler }}

    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Configure (CMake)
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        env:
          CXX_FLAGS: -fsanitize-address -fsanitize-undefined
        run: |
          c++ --version
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -G Ninja \
             -DLIBEXT_TESTS=ON -DLIBEXT_TESTS_NO_TIME_CRITICAL=ON -DLIBEXT_EXAMPLES=ON -DEXT_DOWNLOAD=ON

      - name: Build (Ninja)
        # Build your program with the given configuration
        env:
          NINJA_STATUS: '[%f/%t %o/sec %es] '
        run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -VV -C ${{ env.build_type }}
